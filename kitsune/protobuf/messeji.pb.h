/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Mon Jan 25 16:04:59 2016. */

#ifndef PB_MESSEJI_PB_H_INCLUDED
#define PB_MESSEJI_PB_H_INCLUDED
#include <pb.h>

#include "sleep_sounds.pb.h"

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Message_Type {
    Message_Type_SLEEP_SOUNDS = 0
} Message_Type;

/* Struct definitions */
typedef struct _BatchMessage {
    pb_callback_t message;
} BatchMessage;

typedef struct _ReceiveMessageRequest {
    pb_callback_t sense_id;
    pb_callback_t message_read_id;
} ReceiveMessageRequest;

typedef struct _Message {
    pb_callback_t sender_id;
    int64_t order;
    bool has_message_id;
    int64_t message_id;
    Message_Type type;
    bool has_sleep_sounds_command;
    SleepSoundsCommand sleep_sounds_command;
} Message;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ReceiveMessageRequest_init_default       {{{NULL}, NULL}, {{NULL}, NULL}}
#define Message_init_default                     {{{NULL}, NULL}, 0, false, 0, (Message_Type)0, false, SleepSoundsCommand_init_default}
#define BatchMessage_init_default                {{{NULL}, NULL}}
#define ReceiveMessageRequest_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}}
#define Message_init_zero                        {{{NULL}, NULL}, 0, false, 0, (Message_Type)0, false, SleepSoundsCommand_init_zero}
#define BatchMessage_init_zero                   {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define BatchMessage_message_tag                 1
#define ReceiveMessageRequest_sense_id_tag       1
#define ReceiveMessageRequest_message_read_id_tag 2
#define Message_sender_id_tag                    1
#define Message_order_tag                        2
#define Message_message_id_tag                   3
#define Message_type_tag                         4
#define Message_sleep_sounds_command_tag         5

/* Struct field encoding specification for nanopb */
extern const pb_field_t ReceiveMessageRequest_fields[3];
extern const pb_field_t Message_fields[6];
extern const pb_field_t BatchMessage_fields[2];

/* Maximum encoded size of messages (where known) */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
