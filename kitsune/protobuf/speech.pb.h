/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Wed Sep 07 23:20:11 2016. */

#ifndef PB_SPEECH_PB_H_INCLUDED
#define PB_SPEECH_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _keyword {
    keyword_NULL = 0,
    keyword_OK_SENSE = 1,
    keyword_STOP = 2,
    keyword_SNOOZE = 3,
    keyword_ALEXA = 4
} keyword;

/* Struct definitions */
typedef struct _speech_data {
    bool has_word;
    keyword word;
    bool has_confidence;
    int32_t confidence;
} speech_data;

/* Default values for struct fields */

/* Initializer values for message structs */
#define speech_data_init_default                 {false, (keyword)0, false, 0}
#define speech_data_init_zero                    {false, (keyword)0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define speech_data_word_tag                     1
#define speech_data_confidence_tag               2

/* Struct field encoding specification for nanopb */
extern const pb_field_t speech_data_fields[3];

/* Maximum encoded size of messages (where known) */
#define speech_data_size                         17

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
