/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Tue Mar 15 12:38:15 2016. */

#ifndef PB_FILE_MANIFEST_PB_H_INCLUDED
#define PB_FILE_MANIFEST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _FileManifest_FileStatusType {
    FileManifest_FileStatusType_DOWNLOAD_COMPLETED = 0,
    FileManifest_FileStatusType_DOWNLOAD_PENDING = 1
} FileManifest_FileStatusType;

typedef enum _FileManifest_FileOperationError_ErrorType {
    FileManifest_FileOperationError_ErrorType_NO_ERROR = 0,
    FileManifest_FileOperationError_ErrorType_READ_ERROR = 1,
    FileManifest_FileOperationError_ErrorType_WRITE_ERROR = 2
} FileManifest_FileOperationError_ErrorType;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(20) FileManifest_FileDownload_sha1_t;

typedef struct _FileManifest_FileDownload {
    pb_callback_t host;
    pb_callback_t url;
    pb_callback_t sd_card_filename;
    pb_callback_t sd_card_path;
    bool has_sha1;
    FileManifest_FileDownload_sha1_t sha1;
} FileManifest_FileDownload;

typedef struct _FileManifest_FileOperationError {
    pb_callback_t filename;
    bool has_err_type;
    FileManifest_FileOperationError_ErrorType err_type;
    bool has_err_code;
    int32_t err_code;
} FileManifest_FileOperationError;

typedef struct _FileManifest_LinkHealth {
    bool has_send_errors;
    uint32_t send_errors;
    bool has_time_to_response;
    uint32_t time_to_response;
} FileManifest_LinkHealth;

typedef struct _FileManifest_MemoryInfo {
    bool has_total_memory;
    uint32_t total_memory;
    bool has_free_memory;
    uint32_t free_memory;
    bool has_sd_card_failure;
    bool sd_card_failure;
} FileManifest_MemoryInfo;

typedef struct _FileManifest {
    pb_callback_t file_info;
    bool has_file_status;
    FileManifest_FileStatusType file_status;
    bool has_device_uptime_in_seconds;
    uint32_t device_uptime_in_seconds;
    bool has_query_delay;
    uint32_t query_delay;
    bool has_firmware_version;
    int32_t firmware_version;
    bool has_unix_time;
    int32_t unix_time;
    bool has_link_health;
    FileManifest_LinkHealth link_health;
    bool has_sd_card_size;
    FileManifest_MemoryInfo sd_card_size;
    pb_size_t error_info_count;
    FileManifest_FileOperationError error_info[10];
    pb_callback_t sense_id;
} FileManifest;

typedef struct _FileManifest_File {
    bool has_download_info;
    FileManifest_FileDownload download_info;
    bool has_delete_file;
    bool delete_file;
    bool has_update_file;
    bool update_file;
} FileManifest_File;

/* Default values for struct fields */

/* Initializer values for message structs */
#define FileManifest_init_default                {{{NULL}, NULL}, false, (FileManifest_FileStatusType)0, false, 0, false, 0, false, 0, false, 0, false, FileManifest_LinkHealth_init_default, false, FileManifest_MemoryInfo_init_default, 0, {FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default, FileManifest_FileOperationError_init_default}, {{NULL}, NULL}}
#define FileManifest_FileDownload_init_default   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, {0, {0}}}
#define FileManifest_FileOperationError_init_default {{{NULL}, NULL}, false, (FileManifest_FileOperationError_ErrorType)0, false, 0}
#define FileManifest_File_init_default           {false, FileManifest_FileDownload_init_default, false, 0, false, 0}
#define FileManifest_LinkHealth_init_default     {false, 0, false, 0}
#define FileManifest_MemoryInfo_init_default     {false, 0, false, 0, false, 0}
#define FileManifest_init_zero                   {{{NULL}, NULL}, false, (FileManifest_FileStatusType)0, false, 0, false, 0, false, 0, false, 0, false, FileManifest_LinkHealth_init_zero, false, FileManifest_MemoryInfo_init_zero, 0, {FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero, FileManifest_FileOperationError_init_zero}, {{NULL}, NULL}}
#define FileManifest_FileDownload_init_zero      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, {0, {0}}}
#define FileManifest_FileOperationError_init_zero {{{NULL}, NULL}, false, (FileManifest_FileOperationError_ErrorType)0, false, 0}
#define FileManifest_File_init_zero              {false, FileManifest_FileDownload_init_zero, false, 0, false, 0}
#define FileManifest_LinkHealth_init_zero        {false, 0, false, 0}
#define FileManifest_MemoryInfo_init_zero        {false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define FileManifest_FileDownload_host_tag       1
#define FileManifest_FileDownload_url_tag        2
#define FileManifest_FileDownload_sd_card_filename_tag 3
#define FileManifest_FileDownload_sd_card_path_tag 4
#define FileManifest_FileDownload_sha1_tag       5
#define FileManifest_FileOperationError_filename_tag 1
#define FileManifest_FileOperationError_err_type_tag 2
#define FileManifest_FileOperationError_err_code_tag 3
#define FileManifest_LinkHealth_send_errors_tag  1
#define FileManifest_LinkHealth_time_to_response_tag 2
#define FileManifest_MemoryInfo_total_memory_tag 1
#define FileManifest_MemoryInfo_free_memory_tag  2
#define FileManifest_MemoryInfo_sd_card_failure_tag 3
#define FileManifest_file_info_tag               1
#define FileManifest_file_status_tag             2
#define FileManifest_device_uptime_in_seconds_tag 3
#define FileManifest_query_delay_tag             4
#define FileManifest_firmware_version_tag        5
#define FileManifest_unix_time_tag               6
#define FileManifest_link_health_tag             7
#define FileManifest_sd_card_size_tag            8
#define FileManifest_error_info_tag              9
#define FileManifest_sense_id_tag                10
#define FileManifest_File_download_info_tag      1
#define FileManifest_File_delete_file_tag        2
#define FileManifest_File_update_file_tag        3

/* Struct field encoding specification for nanopb */
extern const pb_field_t FileManifest_fields[11];
extern const pb_field_t FileManifest_FileDownload_fields[6];
extern const pb_field_t FileManifest_FileOperationError_fields[4];
extern const pb_field_t FileManifest_File_fields[4];
extern const pb_field_t FileManifest_LinkHealth_fields[3];
extern const pb_field_t FileManifest_MemoryInfo_fields[4];

/* Maximum encoded size of messages (where known) */
#define FileManifest_LinkHealth_size             12
#define FileManifest_MemoryInfo_size             14

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
