/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Tue Oct 28 16:47:21 2014. */

#ifndef PB_AUDIO_DATA_PB_H_INCLUDED
#define PB_AUDIO_DATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _audio_data {
    pb_callback_t features;
    bool has_feature_version;
    int32_t feature_version;
    bool has_samples;
    int32_t samples;
    bool has_rate;
    int32_t rate;
    bool has_audio_version;
    int32_t audio_version;
    pb_callback_t audio;
} audio_data;

/* Default values for struct fields */

/* Initializer values for message structs */
#define audio_data_init_default                  {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}
#define audio_data_init_zero                     {{{NULL}, NULL}, false, 0, false, 0, false, 0, false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define audio_data_features_tag                  1
#define audio_data_feature_version_tag           2
#define audio_data_samples_tag                   3
#define audio_data_rate_tag                      4
#define audio_data_audio_version_tag             5
#define audio_data_audio_tag                     6

/* Struct field encoding specification for nanopb */
extern const pb_field_t audio_data_fields[7];

/* Maximum encoded size of messages (where known) */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
