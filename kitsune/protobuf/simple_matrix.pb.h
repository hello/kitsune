/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Tue Nov  1 15:20:36 2016. */

#ifndef PB_SIMPLE_MATRIX_PB_H_INCLUDED
#define PB_SIMPLE_MATRIX_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _SimpleMatrixDataType {
    SimpleMatrixDataType_SINT8 = 0
} SimpleMatrixDataType;

/* Struct definitions */
typedef struct _SimpleMatrix {
    pb_callback_t id;
    bool has_num_cols;
    int32_t num_cols;
    bool has_data_type;
    SimpleMatrixDataType data_type;
    pb_callback_t payload;
    pb_callback_t device_id;
} SimpleMatrix;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SimpleMatrix_init_default                {{{NULL}, NULL}, false, 0, false, (SimpleMatrixDataType)0, {{NULL}, NULL}, {{NULL}, NULL}}
#define SimpleMatrix_init_zero                   {{{NULL}, NULL}, false, 0, false, (SimpleMatrixDataType)0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SimpleMatrix_id_tag                      1
#define SimpleMatrix_num_cols_tag                2
#define SimpleMatrix_data_type_tag               3
#define SimpleMatrix_payload_tag                 4
#define SimpleMatrix_device_id_tag               5

/* Struct field encoding specification for nanopb */
extern const pb_field_t SimpleMatrix_fields[6];

/* Maximum encoded size of messages (where known) */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
