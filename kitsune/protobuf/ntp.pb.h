/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.1 at Tue Jan 26 11:03:07 2016. */

#ifndef PB_NTP_PB_H_INCLUDED
#define PB_NTP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _hello_NTPDataPacket {
    bool has_reference_ts;
    int64_t reference_ts;
    bool has_origin_ts;
    int64_t origin_ts;
    bool has_receive_ts;
    int64_t receive_ts;
    bool has_transmit_ts;
    int64_t transmit_ts;
} hello_NTPDataPacket;

/* Default values for struct fields */

/* Initializer values for message structs */
#define hello_NTPDataPacket_init_default         {false, 0, false, 0, false, 0, false, 0}
#define hello_NTPDataPacket_init_zero            {false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define hello_NTPDataPacket_reference_ts_tag     1
#define hello_NTPDataPacket_origin_ts_tag        2
#define hello_NTPDataPacket_receive_ts_tag       3
#define hello_NTPDataPacket_transmit_ts_tag      4

/* Struct field encoding specification for nanopb */
extern const pb_field_t hello_NTPDataPacket_fields[5];

/* Maximum encoded size of messages (where known) */
#define hello_NTPDataPacket_size                 44

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
